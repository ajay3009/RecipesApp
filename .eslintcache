[{"F:\\tryouts\\reactjs\\recipeapp\\src\\index.js":"1","F:\\tryouts\\reactjs\\recipeapp\\src\\App.js":"2","F:\\tryouts\\reactjs\\recipeapp\\src\\reportWebVitals.js":"3","F:\\tryouts\\reactjs\\recipeapp\\src\\components\\Recipes\\Recipes.js":"4","F:\\tryouts\\reactjs\\recipeapp\\src\\components\\Recipes\\RecipesList\\RecipesList.js":"5","F:\\tryouts\\reactjs\\recipeapp\\src\\components\\SearchBox\\SearchBox.js":"6","F:\\tryouts\\reactjs\\recipeapp\\src\\components\\Keywords\\Keywords.js":"7","F:\\tryouts\\reactjs\\recipeapp\\src\\components\\Filters\\Filters.js":"8","F:\\tryouts\\reactjs\\recipeapp\\src\\components\\Filters\\Filter\\Filter.js":"9"},{"size":500,"mtime":499162500000,"results":"10","hashOfConfig":"11"},{"size":139,"mtime":1610986183728,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"11"},{"size":2660,"mtime":1611115434133,"results":"14","hashOfConfig":"11"},{"size":599,"mtime":1610995939602,"results":"15","hashOfConfig":"11"},{"size":2378,"mtime":1610991816061,"results":"16","hashOfConfig":"11"},{"size":658,"mtime":1610897742982,"results":"17","hashOfConfig":"11"},{"size":1041,"mtime":1610995875039,"results":"18","hashOfConfig":"11"},{"size":1166,"mtime":1610991816060,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"73anve",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"F:\\tryouts\\reactjs\\recipeapp\\src\\index.js",[],["40","41"],"F:\\tryouts\\reactjs\\recipeapp\\src\\App.js",[],"F:\\tryouts\\reactjs\\recipeapp\\src\\reportWebVitals.js",[],"F:\\tryouts\\reactjs\\recipeapp\\src\\components\\Recipes\\Recipes.js",["42","43"],"F:\\tryouts\\reactjs\\recipeapp\\src\\components\\Recipes\\RecipesList\\RecipesList.js",[],"F:\\tryouts\\reactjs\\recipeapp\\src\\components\\SearchBox\\SearchBox.js",["44"],"import React, { useState, useEffect, useRef, useCallback } from 'react';\r\nimport SearchKeywords from '../Keywords/Keywords';\r\nimport Filters from './../Filters/Filters';\r\n\r\nimport './SearchBox.css';\r\n\r\nconst SearchBox = React.memo(props => {\r\n    const [searchTxt, setSearchTxt] = useState('');\r\n    const [keywords, setKeywords] = useState([]);\r\n    const [filters, setFilters] = useState('');\r\n    const { onLoadRecipes, onError, onLoad } = props;\r\n    const inputRef = useRef();\r\n\r\n    const updateKeyWords = useCallback((txt) => {\r\n        setKeywords([txt, ...keywords].splice(0,5));\r\n    }, [keywords]);\r\n\r\n    const filterHandlers = (filters) => {\r\n        let filter = '';\r\n        for(let key in filters) {\r\n            if (filters[key] !== '') {\r\n                filter += '&' + key + \"=\" + filters[key];\r\n            }\r\n        }\r\n        setFilters(filter);\r\n    };\r\n\r\n    useEffect(() => {\r\n        const timer = setTimeout(() => {\r\n            if (searchTxt.length && searchTxt === inputRef.current.value) {\r\n                onError(null);\r\n                onLoad(true);\r\n                fetch(`https://api.edamam.com/search?q=${searchTxt}${filters}&app_id=${process.env.REACT_APP_CLIENT_ID}&app_key=${process.env.REACT_APP_KEY}&from=0&to=10`).then(response => {\r\n                    return response.json();\r\n                }).then(responseData => {\r\n                    onLoadRecipes(responseData);\r\n                    updateKeyWords(searchTxt);\r\n                }).catch(error => {\r\n                    onError('Something went wrong!');\r\n                });\r\n            }\r\n        }, 500);\r\n        return () => {\r\n            clearTimeout(timer);\r\n        }\r\n    }, [searchTxt, onLoadRecipes, inputRef, onError, filters]);\r\n\r\n\r\n    return (\r\n        <section className=\"search\">\r\n            <div className=\"search-input\">\r\n                <label htmlFor=\"search\">Search</label>\r\n                <input aria-label=\"Enter text to search\" placeholder=\"Enter text to search\" data-testid=\"search\" id=\"search\" ref={inputRef} type=\"text\" value={searchTxt} onChange={(e) => setSearchTxt(e.target.value)}  />\r\n            </div>\r\n            <div className=\"search-filters\">\r\n                <Filters updateFilters={filterHandlers}/>\r\n            </div>\r\n            <SearchKeywords keywords={keywords} />\r\n        </section>\r\n    )\r\n});\r\n\r\nexport default SearchBox;","F:\\tryouts\\reactjs\\recipeapp\\src\\components\\Keywords\\Keywords.js",[],"F:\\tryouts\\reactjs\\recipeapp\\src\\components\\Filters\\Filters.js",[],"F:\\tryouts\\reactjs\\recipeapp\\src\\components\\Filters\\Filter\\Filter.js",[],{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":34,"column":12,"nodeType":"51","messageId":"52","endLine":34,"endColumn":21},{"ruleId":"49","severity":1,"message":"53","line":34,"column":23,"nodeType":"51","messageId":"52","endLine":34,"endColumn":35},{"ruleId":"54","severity":1,"message":"55","line":46,"column":8,"nodeType":"56","endLine":46,"endColumn":62,"suggestions":"57"},"no-native-reassign",["58"],"no-negated-in-lhs",["59"],"no-unused-vars","'httpState' is assigned a value but never used.","Identifier","unusedVar","'dispatchHttp' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'onLoad' and 'updateKeyWords'. Either include them or remove the dependency array.","ArrayExpression",["60"],"no-global-assign","no-unsafe-negation",{"desc":"61","fix":"62"},"Update the dependencies array to be: [searchTxt, onLoadRecipes, inputRef, onError, filters, onLoad, updateKeyWords]",{"range":"63","text":"64"},[1686,1740],"[searchTxt, onLoadRecipes, inputRef, onError, filters, onLoad, updateKeyWords]"]